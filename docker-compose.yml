version: "3"

services:
  hexo-build:
    image: linguochi/hexo-build
    container_name: hexo-build
    volumes:
      - /opt:/app

  lingc-webhook:
    image: linguochi/lingc-webhook
    container_name: lingc-webhook
    volumes:
      - /opt:/app

  qinglong:
    image: whyour/qinglong:latest
    container_name: qinglong
    volumes:
      - /opt/qinglong/data:/ql/data
    ports:
      - "0.0.0.0:5700:5700"
    environment:
      - ENABLE_HANGUP=true
      - ENABLE_WEB_PANEL=true

  acme:
    image: neilpang/acme.sh
    container_name: acme
    restart: unless-stopped
    environment:
      - DP_Id=268714
      - DP_Key=806c61d86f03c42caa1987e8e9de5344
      - DEPLOY_DOCKER_CONTAINER_LABEL=docker_nginx
      - DEPLOY_DOCKER_CONTAINER_KEY_FILE=/etc/nginx/ssl/*.linguochi.com/*.linguochi.com.key
      - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE=/etc/nginx/ssl/*.linguochi.com/fullchain.cer
      - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD=nginx -s reload
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/nginx/acme.sh:/acme.sh
      - /opt/nginx/ssl:/etc/nginx/ssl
    command: daemon

  easymock:
    image: easymock/easymock:latest
    container_name: easymock
    ports:
      - "7300:7300"
    privileged: true
    command: /bin/bash -c "npm start"
    volumes:
      # 日志地址，根据需要修改为本地地址
      - './easymock/logs:/home/easy-mock/easy-mock/logs'
      # 配置地址，请使用本地配置地址替换
      - './easymock/easymock.json:/home/easy-mock/easy-mock/config/production.json'
    restart: always

  mongodb:
    image: mongo:3.4
    container_name: mongodb
    privileged: true
    volumes:
      # ./data/db 数据库文件存放地址，根据需要修改为本地地址 挂载当前目录下的/data/db到容器中的 /data/db 无需使用绝对路径
      - '/opt/mongodb/db:/data/db'
    restart: always

  redis:
    image: redis:4.0.6
    container_name: redis
    privileged: true
    command: redis-server --appendonly yes
    volumes:
      # ./data/redis redis 数据文件存放地址，根据需要修改为本地地址  挂载当前目录下的/data/redis 到容器中的/data 无需使用绝对路径
      - '/opt/data/redis:/data'
    restart: always

  bark-server:
    image: finab/bark-server
    container_name: bark-server
    restart: always
    volumes:
      - ./data:/data
    ports:
      - "8080:8080"

  aria2:
    image: p3terx/aria2-pro
    container_name: aria2
    logging:
      options:
        max-size: 1m
    ports:
      - "6800:6800"
      - "6888:6888"
      - "6888:6888/udp"
    environment:
      - PUID=${CLOUDREVE_PUID}
      - PGID=${CLOUDREVE_PGID}
      - RPC_SECRET=${ARIA2_RPC_SECRET}
    volumes:
      - ${ARIA2_CONFIG_PATH}:/config
      - ${TEMP_FOLDER_PATH}:/data
    restart: unless-stopped

  cloudreve:
    image: cloudreve/cloudreve:latest
    container_name: cloudreve
    env_file:
      - ./.env
    environment:
      - PUID=${CLOUDREVE_PUID}
      - PGID=${CLOUDREVE_PGID}
    volumes:
      - ${CLOUDREVE_UPLOAD_PATH}:/cloudreve/uploads
      - ${TEMP_FOLDER_PATH}:/data
#      - ${CLOUDREVE_CONF_PATH}:/cloudreve/config
      - ${CLOUDREVE_CONF_PATH}:/cloudreve/conf.ini
      - ${CLOUDREVE_DB_PATH}:/cloudreve/db
      - ${CLOUDREVE_AVATAR_PATH}:/cloudreve/avatar

  wizserver:
    container_name: wizserver
    build: ./wizserver
    restart: always
    ports:
      - "9269:9269/udp"
      - "8011:80"
    volumes:
      - /opt/wizdata:/wiz/storage
      - /etc/localtime:/etc/localtime

  fileview:
    container_name: fileview
    image: keking/kkfileview
    restart: always

  nginx:
    image: nginx
    container_name: nginx
    privileged: true
    restart: always
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /var/www/html:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - /opt/hexo-blog:/var/www/html/hexo-blog
      - /opt/nginx/ssl:/etc/nginx/ssl
      - /opt/nginx/logs:/var/log/nginx
    links:
      - qinglong
    ports:
      - "80:80"
      - "443:443"
    labels:
      - docker_nginx

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    ports:
      - "1880:1880"
    environment:
      - TZ=Asia/Shanghai
    restart: always
    volumes:
      - /opt/nodered/data:/data

  mysql:
    image: mysql:8.0
    container_name: mysql
    command:
      - --default_authentication_plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - /opt/wordpress:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - mysql
    image: wordpress:latest
    container_name: wordpress
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
